version: 0.2

phases:
  install:
    runtime-version:
      java: corretto17

  pre_build:
    commands:
      - echo Logging in to Amazon ECR....
      - aws --version
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/protoboot-app
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo building the Jar file
      - mvn clean install
      - echo Building the Docker image...
      - docker build -t protoboot-app .
      - docker tag protoboot-app:latest $REPOSITORY_URI:$IMAGE_TAG

    post_build:
      commands:
        - echo Logging to Amazon Push `date`
        - docker push $REPOSITORY_URI:latest
        - docker push $REPOSITORY_URI:$IMAGE_TAG
        - DOCKER_CONTAINER_NAME=protoboot-app
        - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
        - echo $DOCKER_CONTAINER_NAME
        - echo printing imagedefinitions.json
        - cat imagedefinitions.json
        # - command
reports:
  jacoco-report:
    files:
      - 'target/site/jacoco/jacoco.xml'
    file-format: 'JACOCOXML'
  junit-report:
    files:
      - 'target/surefire-reports/*.xml'
    file-format: 'JUNITXML'

artifacts:
  files:
    - imagedefinitions.json
    - target/protobootapp-0.0.1-SNAPSHOT.jar
